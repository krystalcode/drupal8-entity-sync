<?php

/**
 * @file
 * Contains hooks and functionality for the `entity_sync` module.
 */

use Drupal\entity_sync\Event\SyncEntityTypesEvent;

/**
 * Hook implementations.
 */

/**
 * Implements hook_cronapi().
 *
 * Sync entities from the remote service on cron runs.
 */
function entity_sync_cronapi() {
  $items = [];

  // Define the entities that need to be synced.
  // @I Use a config file to add the entity definitions
  //    type     : improvement
  //    priority : medium
  //    labels   : refactoring
  $entities_to_sync = [];
  // Allow other modules to add/alter the entities to be synced.
  $event = new SyncEntityTypesEvent($entities_to_sync);
  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch(SyncEntityTypesEvent::EVENT_NAME, $event);
  $entities_to_sync = $event->getEntitiesToSync();

  if (!$entities_to_sync) {
    return $items;
  }

  // Go through the entity types that need to be synced and create a cron item
  // for each entity type.
  foreach ($entities_to_sync as $sync_id => $entity_info) {
    $items[$sync_id . '_import_list'] = _entity_sync_create_cron_job(
      $sync_id,
      $entity_info
    );
  }

  return $items;
}

/**
 * Callbacks.
 */

/**
 * Cron job callback.
 *
 * Fetch entities of the given type from the remote service and sync them to the
 * appropriate Drupal entity.
 *
 * @param string $sync_id
 *   The entity sync id.
 * @param string $entity_type_id
 *   The entity type.
 * @param string $bundle
 *   The name of the entity bundle.
 */
function entity_sync_cron_job_callback($sync_id, $entity_type_id, $bundle) {
  // Call the sync manager to fetch and sync entities from the remote service
  // for this particular entity type.
  $sync_from_manager = \Drupal::service('entity_sync.sync_from.manager');
  $sync_from_manager->syncList($sync_id, $entity_type_id, $bundle);
}

/**
 * Custom callbacks.
 */

/**
 * Creates a cron job for a given entity type.
 *
 * @param string $sync_id
 *   The entity sync id.
 * @param array $entity_type_info
 *   An array of information about the entity type.
 *
 * @return array
 *   An cron job item array.
 */
function _entity_sync_create_cron_job($sync_id, array $entity_type_info) {
  // @I Determine if we need more properties when defining the job
  //    type     : improvement
  //    priority : medium
  //    labels   : refactoring
  return [
    'title' => $entity_type_info['title'],
    'callback' => 'entity_sync_cron_job_callback',
    'callback arguments' => [
      $sync_id,
      $entity_type_info['entity_type_id'],
      $entity_type_info['entity_bundle']
    ],
    'enabled' => $entity_type_info['cron']['enabled'],
    'scheduler' => [
      'name' => 'simple',
      'simple' => [
        'rules' => ['0+@ * * * *'],
      ],
    ],
  ];
}
